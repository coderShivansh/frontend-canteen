{"ast":null,"code":"import axios from 'axios';\nimport { base_url } from '../constant';\nexport const getAllFoods = () => async dispatch => {\n  dispatch({\n    type: 'GET_FOODS_REQUEST'\n  });\n  try {\n    const response = await axios.get(`${base_url}/api/foods/getallfoods`);\n    console.log(response);\n    dispatch({\n      type: \"GET_FOODS_SUCCESS\",\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_FOODS_FAILED',\n      payload: error\n    });\n  }\n};\nexport const filterFoods = (searchkey, category) => async dispatch => {\n  var filteredFoods;\n  dispatch({\n    type: 'GET_FOODS_REQUEST'\n  });\n  try {\n    const response = await axios.get(`/api/foods/getallfoods`);\n    filteredFoods = response.data.filter(food => food.name.toLowerCase().includes(searchkey));\n    if (category !== 'all') {\n      filteredFoods = response.data.filter(food => food.category.toLowerCase() === category);\n    }\n    dispatch({\n      type: \"GET_FOODS_SUCCESS\",\n      payload: filteredFoods\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_FOODS_FAILED',\n      payload: error\n    });\n  }\n};\nexport const addFood = food => async dispatch => {\n  dispatch({\n    type: 'ADD_FOOD_REQUEST'\n  });\n  try {\n    const response = await axios.post(`${base_url}/api/foods/addfood`, {\n      food\n    });\n    console.log(response);\n    dispatch({\n      type: 'ADD_FOOD_SUCCESS'\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_FOOD_FAILED',\n      payload: error\n    });\n  }\n};\nexport const getFoodById = foodid => async dispatch => {\n  dispatch({\n    type: 'GET_FOODBYID_REQUEST'\n  });\n  try {\n    const response = await axios.post(`${base_url}/api/foods/getfoodbyid`, {\n      foodid\n    });\n    console.log(response);\n    dispatch({\n      type: \"GET_FOODBYID_SUCCESS\",\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_FOODBTID_FAILED',\n      payload: error\n    });\n  }\n};\nexport const editFood = updatedfood => async dispatch => {\n  dispatch({\n    type: 'EDIT_FOOD_REQUEST'\n  });\n  try {\n    const response = await axios.post(`${base_url}/api/foods/editfood`, {\n      updatedfood\n    });\n    console.log(response);\n    dispatch({\n      type: 'EDIT_FOOD_SUCCESS'\n    });\n    window.location.href = '/admin/foodslist';\n  } catch (error) {\n    dispatch({\n      type: 'EDIT_FOOD_FAILED',\n      payload: error\n    });\n  }\n};\nexport const deleteFood = foodid => async dispatch => {\n  try {\n    const response = await axios.post(`${base_url}/api/foods/deletefood`, {\n      foodid\n    });\n    alert('Food Deleted Successfully .. !!');\n    console.log(response);\n    window.location.reload();\n  } catch (error) {\n    alert('Something went Wrong');\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","base_url","getAllFoods","dispatch","type","response","get","console","log","payload","data","error","filterFoods","searchkey","category","filteredFoods","filter","food","name","toLowerCase","includes","addFood","post","getFoodById","foodid","editFood","updatedfood","window","location","href","deleteFood","alert","reload"],"sources":["C:/Users/coder/Desktop/Saideep/To Prashant/client/src/actions/foodAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport { base_url } from '../constant';\r\n\r\nexport const getAllFoods=()=>async dispatch=>{\r\n    dispatch({type:'GET_FOODS_REQUEST'})\r\n\r\n    try{\r\n           const response=await axios.get(`${base_url}/api/foods/getallfoods`)\r\n           console.log(response)\r\n           dispatch({type:\"GET_FOODS_SUCCESS\", payload : response.data})\r\n    }\r\n    catch (error){\r\n            dispatch({type:'GET_FOODS_FAILED', payload:error})\r\n    }\r\n}\r\n\r\nexport const filterFoods=(searchkey , category)=>async dispatch=>{\r\n\r\n    var filteredFoods;\r\n    dispatch({type:'GET_FOODS_REQUEST'})\r\n\r\n    try{\r\n           const response= await axios.get(`/api/foods/getallfoods`)\r\n           filteredFoods = response.data.filter(food=>food.name.toLowerCase().includes(searchkey))\r\n\r\n           if(category !=='all')\r\n           {\r\n            filteredFoods = response.data.filter(food=>food.category.toLowerCase() === category)\r\n           }\r\n\r\n           dispatch({type:\"GET_FOODS_SUCCESS\", payload : filteredFoods})\r\n    }\r\n    catch (error){\r\n            dispatch({type:'GET_FOODS_FAILED', payload:error})\r\n    }\r\n}\r\n\r\nexport const addFood=(food)=>async dispatch=>{\r\n    dispatch({type : 'ADD_FOOD_REQUEST'})\r\n\r\n    try {\r\n          const response= await axios.post(`${base_url}/api/foods/addfood`,{food})\r\n          console.log(response)\r\n          dispatch({type: 'ADD_FOOD_SUCCESS'})\r\n    } catch(error){\r\n             dispatch({type:'ADD_FOOD_FAILED', payload : error })\r\n    }\r\n}\r\n\r\n\r\nexport const getFoodById=(foodid)=>async dispatch=>{\r\n    dispatch({type:'GET_FOODBYID_REQUEST'})\r\n\r\n    try{\r\n           const response=await axios.post(`${base_url}/api/foods/getfoodbyid` , {foodid} )\r\n           console.log(response)\r\n           dispatch({type:\"GET_FOODBYID_SUCCESS\", payload : response.data})\r\n    }\r\n    catch (error){\r\n            dispatch({type:'GET_FOODBTID_FAILED', payload:error})\r\n    }\r\n}\r\n\r\n\r\nexport const editFood=(updatedfood)=>async dispatch=>{\r\n    dispatch({type : 'EDIT_FOOD_REQUEST'})\r\n\r\n    try {\r\n          const response= await axios.post(`${base_url}/api/foods/editfood`,{updatedfood})\r\n          console.log(response)\r\n          dispatch({type: 'EDIT_FOOD_SUCCESS'})\r\n          window.location.href='/admin/foodslist'\r\n    } catch(error){\r\n             dispatch({type:'EDIT_FOOD_FAILED', payload : error })\r\n    }\r\n}\r\n\r\nexport const deleteFood=(foodid)=> async dispatch=>{\r\n\r\n    try {\r\n       const response=  await axios.post(`${base_url}/api/foods/deletefood`, {foodid})\r\n       alert('Food Deleted Successfully .. !!')\r\n       console.log(response)\r\n       window.location.reload()\r\n    } catch (error) {\r\n           alert('Something went Wrong')\r\n           console.log(error)\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}