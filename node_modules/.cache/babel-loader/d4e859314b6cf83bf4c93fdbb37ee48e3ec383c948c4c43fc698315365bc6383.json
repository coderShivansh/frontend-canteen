{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coder\\\\Desktop\\\\Saideep\\\\To Prashant\\\\client\\\\src\\\\screens\\\\ForgotPasswordScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"../ForgotPassword.module.css\";\nimport Loading from \"../components/Loading\"; // Import your Loading component\nimport { base_url } from '../constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false); // State for loading\n\n  const handleSendEmail = async () => {\n    setLoading(true); // Set loading to true when sending email\n    try {\n      // Make API call to send password reset email\n      const response = await axios.post(`${base_url}/api/users/forgot/password`, {\n        email: email\n      });\n      if (response.status === 200) {\n        setSuccessMessage(\"Password reset email sent successfully. Please check your email.\");\n      } else {\n        setErrorMessage(\"Failed to send password reset email. Please try again.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"An error occurred while sending password reset email.\");\n    } finally {\n      setLoading(false); // Set loading to false after API call completes\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendEmail,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"ocCHluXlQ3gSlqWGn949TCJNOvM=\");\n_c = ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","styles","Loading","base_url","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","errorMessage","setErrorMessage","successMessage","setSuccessMessage","loading","setLoading","handleSendEmail","response","post","status","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/coder/Desktop/Saideep/To Prashant/client/src/screens/ForgotPasswordScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"../ForgotPassword.module.css\";\r\nimport Loading from \"../components/Loading\"; // Import your Loading component\r\nimport { base_url } from '../constant';\r\n\r\nexport default function ForgotPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // State for loading\r\n\r\n\r\n\r\n  const handleSendEmail = async () => {\r\n    setLoading(true); // Set loading to true when sending email\r\n    try {\r\n      // Make API call to send password reset email\r\n      const response = await axios.post(`${base_url}/api/users/forgot/password`, {\r\n        email: email,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setSuccessMessage(\r\n          \"Password reset email sent successfully. Please check your email.\"\r\n        );\r\n      } else {\r\n        setErrorMessage(\r\n          \"Failed to send password reset email. Please try again.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"An error occurred while sending password reset email.\");\r\n    } finally {\r\n      setLoading(false); // Set loading to false after API call completes\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Forgot Password</h2>\r\n      <div>\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n        {successMessage && (\r\n          <div className=\"success-message\">{successMessage}</div>\r\n        )}\r\n        <div>\r\n          <label>Enter your email </label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        {loading ? (\r\n          <Loading /> \r\n        ) : (\r\n          <button onClick={handleSendEmail}>Send Email</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}