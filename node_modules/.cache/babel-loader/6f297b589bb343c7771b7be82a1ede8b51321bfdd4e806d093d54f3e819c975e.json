{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coder\\\\Desktop\\\\Saideep\\\\To Prashant\\\\client\\\\src\\\\screens\\\\ResetPasswordScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Import axios for making API calls\nimport { base_url } from \"../constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [showForm, setShowForm] = useState(true);\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmNewPassword) {\n      setErrorMessage(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const token = window.location.search.substring(1);\n      console.log(token);\n      // Make API call to reset password\n      const response = await axios.post(`${base_url}/api/users/reset/password`, {\n        newPassword: newPassword,\n        token\n      });\n      if (response.status === 200) {\n        setSuccessMessage(\"Password reset successfully.\");\n        setShowForm(false);\n      } else {\n        setErrorMessage(\"Failed to reset password. Please try again.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"An error occurred while resetting password.\");\n    }\n  };\n  const handleLogin = () => {\n    // Redirect to login page or handle login logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), !showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password reset successfully. Please login with your new password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"6Rsw7/KPhDBj3eSbJE/CtVxc/Vo=\");\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","base_url","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","showForm","setShowForm","handleResetPassword","token","window","location","search","substring","console","log","response","post","status","error","handleLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/coder/Desktop/Saideep/To Prashant/client/src/screens/ResetPasswordScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\"; // Import axios for making API calls\r\nimport { base_url } from \"../constant\";\r\n\r\nexport default function ResetPassword() {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(true);\r\n\r\n  const handleResetPassword = async () => {\r\n    if (newPassword !== confirmNewPassword) {\r\n      setErrorMessage(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = window.location.search.substring(1);\r\n      console.log(token);\r\n      // Make API call to reset password\r\n      const response = await axios.post(`${base_url}/api/users/reset/password`, {\r\n        newPassword: newPassword,\r\n        token,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setSuccessMessage(\"Password reset successfully.\");\r\n        setShowForm(false);\r\n      } else {\r\n        setErrorMessage(\"Failed to reset password. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"An error occurred while resetting password.\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    // Redirect to login page or handle login logic\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reset Password</h2>\r\n      {showForm && (\r\n        <div>\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n          {successMessage && (\r\n            <div className=\"success-message\">{successMessage}</div>\r\n          )}\r\n          <div>\r\n            <label>New Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Confirm New Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={confirmNewPassword}\r\n              onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button onClick={handleResetPassword}>Reset Password</button>\r\n        </div>\r\n      )}\r\n      {!showForm && (\r\n        <div>\r\n          <p>Password reset successfully. Please login with your new password.</p>\r\n          <a href=\"/login\"><button onClick={handleLogin}>Login</button></a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}